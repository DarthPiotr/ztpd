-- Zadanie 1.A
select 
        lpad('-',2*(level-1),'|-') ||
        t.owner || '.' ||
        t.type_name ||
        ' (FINAL:' || t.final ||
        ', INSTANTIABLE:' ||
        t.instantiable ||
        ', ATTRIBUTES:' ||
        t.attributes ||
        ', METHODS:' || t.methods ||
        ')'
    from all_types t
    start with t.type_name = 'ST_GEOMETRY'
    connect by prior t.type_name = t.supertype_name
           and prior t.owner = t.owner;

-- Zadanie 1.B
select distinct m.method_name
    from all_type_methods m
    where m.type_name like 'ST_POLYGON'
    and m.owner = 'MDSYS'
    order by 1;

-- Zadanie 1.C
CREATE TABLE MYST_MAJOR_CITIES (
    FIPS_CNTRY VARCHAR2(2),
    CITY_NAME VARCHAR2(40),
    STGEOM ST_POINT 
);

-- Zadanie 1.D
INSERT INTO MYST_MAJOR_CITIES
SELECT C.FIPS_CNTRY, C.CITY_NAME, 
    TREAT(ST_POINT.FROM_SDO_GEOM(C.GEOM) AS ST_POINT) STGEOM
FROM MAJOR_CITIES C;

-- Zadanie 2.A
INSERT INTO MYST_MAJOR_CITIES
VALUES('PL', 'Szczyrk', ST_POINT(19.036107, 49.718655, 8307));

-- Zadanie 3.A
CREATE TABLE MYST_COUNTRY_BOUNDARIES (
    FIPS_CNTRY VARCHAR2(2),
    CNTRY_NAME VARCHAR2(40),
    STGEOM ST_MULTIPOLYGON
);

-- Zadanie 3.B
INSERT INTO MYST_COUNTRY_BOUNDARIES
SELECT CB.FIPS_CNTRY, CB.CNTRY_NAME, ST_MULTIPOLYGON(CB.GEOM)
FROM COUNTRY_BOUNDARIES CB;

-- Zadanie 3.C
SELECT CB.STGEOM.ST_GEOMETRYTYPE() TYP_OBIEKTU, 
    COUNT(CB.STGEOM.ST_GEOMETRYTYPE()) ILE
FROM MYST_COUNTRY_BOUNDARIES CB
GROUP BY CB.STGEOM.ST_GEOMETRYTYPE()
ORDER BY CB.STGEOM.ST_GEOMETRYTYPE();

-- Zadanie 3.D
SELECT CB.STGEOM.ST_ISSIMPLE()
FROM MYST_COUNTRY_BOUNDARIES CB;

-- Zadanie 4.A
SELECT CB.CNTRY_NAME, COUNT(*)
FROM MYST_MAJOR_CITIES MC, MYST_COUNTRY_BOUNDARIES CB
WHERE CB.STGEOM.ST_CONTAINS(MC.STGEOM) = 1
GROUP BY CB.CNTRY_NAME;

-- Zadanie 4.B
SELECT CB1.CNTRY_NAME "A NAME", CB2.CNTRY_NAME "B NAME"
FROM MYST_COUNTRY_BOUNDARIES CB1, MYST_COUNTRY_BOUNDARIES CB2
WHERE CB2.CNTRY_NAME = 'Czech Republic' AND
      CB2.STGEOM.ST_TOUCHES(CB1.STGEOM) = 1;

-- Zadanie 4.C
SELECT DISTINCT CB.CNTRY_NAME "CNTRY NAME", R.NAME
FROM RIVERS R, MYST_COUNTRY_BOUNDARIES CB
WHERE CB.CNTRY_NAME = 'Czech Republic' AND
      CB.STGEOM.ST_CROSSES(ST_LINESTRING(R.GEOM)) = 1;

-- Zadanie 4.D
SELECT TREAT(CB1.STGEOM.ST_UNION(CB2.STGEOM) AS ST_POLYGON).ST_AREA() POWIERZCHNIA
FROM MYST_COUNTRY_BOUNDARIES CB1, MYST_COUNTRY_BOUNDARIES CB2
WHERE CB2.CNTRY_NAME = 'Czech Republic'
  AND CB1.CNTRY_NAME = 'Slovakia';

-- Zadanie 4.E
SELECT CB.STGEOM.ST_DIFFERENCE(ST_GEOMETRY(WB.GEOM)) OBIEKT, 
    CB.STGEOM.ST_DIFFERENCE(ST_GEOMETRY(WB.GEOM)).ST_GEOMETRYTYPE() "WEGRY BEZ"
FROM MYST_COUNTRY_BOUNDARIES CB, WATER_BODIES WB
WHERE CB.CNTRY_NAME = 'Hungary' 
  AND WB.NAME = 'Balaton';

-- Zadanie 5.A
EXPLAIN PLAN FOR
    SELECT CB.CNTRY_NAME, COUNT(*)
    FROM MYST_MAJOR_CITIES MC, MYST_COUNTRY_BOUNDARIES CB
    WHERE SDO_WITHIN_DISTANCE(MC.STGEOM, CB.STGEOM, 'distance=100 unit=km') = 'TRUE'
      AND CB.CNTRY_NAME = 'Poland'
    GROUP BY CB.CNTRY_NAME;
    
SELECT *
FROM TABLE(dbms_xplan.display('plan_table', null, null));

-- Zadanie 5.B
INSERT INTO USER_SDO_GEOM_METADATA
SELECT 'MYST_MAJOR_CITIES', 'STGEOM', M.DIMINFO, M.SRID
FROM ALL_SDO_GEOM_METADATA M
WHERE M.TABLE_NAME = 'MAJOR_CITIES';

-- Zadanie 5.C
CREATE INDEX MYST_MAJOR_CITIES_IDX ON MYST_MAJOR_CITIES(STGEOM)
indextype IS MDSYS.SPATIAL_INDEX;

-- Zadanie 5.D
EXPLAIN PLAN FOR
    SELECT CB.CNTRY_NAME, COUNT(*)
    FROM MYST_MAJOR_CITIES MC, MYST_COUNTRY_BOUNDARIES CB
    WHERE SDO_WITHIN_DISTANCE(MC.STGEOM, CB.STGEOM, 'distance=100 unit=km') = 'TRUE'
      AND CB.CNTRY_NAME = 'Poland'
    GROUP BY CB.CNTRY_NAME;

SELECT *
FROM TABLE(dbms_xplan.display('plan_table', null, null));
